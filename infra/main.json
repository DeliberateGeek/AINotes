{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.17.1.54307",
      "templateHash": "4443029656624297190"
    }
  },
  "parameters": {
    "projectName": {
      "type": "string",
      "defaultValue": "ainote",
      "metadata": {
        "description": "Name of the the project which is used to generate a short unique hash used in all resources."
      },
      "maxLength": 10,
      "minLength": 1
    },
    "environmentName": {
      "type": "string",
      "allowedValues": [
        "dev",
        "test",
        "prod",
        "poc"
      ],
      "metadata": {
        "description": "Name of the the environment which is used to generate a short unique hash used in all resources."
      },
      "maxLength": 10,
      "minLength": 1
    },
    "location": {
      "type": "string",
      "defaultValue": "eastus",
      "metadata": {
        "description": "Primary location for all resources"
      },
      "allowedValues": [
        "eastus",
        "southcentralus"
      ],
      "minLength": 1
    }
  },
  "variables": {
    "$fxv#0": {
      "analysisServicesServers": "as",
      "apiManagementService": "apim",
      "appConfigurationConfigurationStores": "appcs",
      "appManagedEnvironments": "cae",
      "appContainerApps": "ca",
      "authorizationPolicyDefinitions": "policy",
      "automationAutomationAccounts": "aa",
      "blueprintBlueprints": "bp",
      "blueprintBlueprintsArtifacts": "bpa",
      "cacheRedis": "redis",
      "cdnProfiles": "cdnp",
      "cdnProfilesEndpoints": "cdne",
      "cognitiveServicesAccounts": "cog",
      "cognitiveServicesFormRecognizer": "cogfr",
      "cognitiveServicesTextAnalytics": "cogta",
      "computeAvailabilitySets": "avail",
      "computeCloudServices": "cld",
      "computeDiskEncryptionSets": "des",
      "computeDisks": "disk",
      "computeDisksOs": "osdisk",
      "computeGalleries": "gal",
      "computeSnapshots": "snap",
      "computeVirtualMachines": "vm",
      "computeVirtualMachineScaleSets": "vmss",
      "containerInstanceContainerGroups": "ci",
      "containerRegistryRegistries": "cr",
      "containerServiceManagedClusters": "aks",
      "databricksWorkspaces": "dbw",
      "dataFactoryFactories": "adf",
      "dataLakeAnalyticsAccounts": "dla",
      "dataLakeStoreAccounts": "dls",
      "dataMigrationServices": "dms",
      "dBforMySQLServers": "mysql",
      "dBforPostgreSQLServers": "psql",
      "devicesIotHubs": "iot",
      "devicesProvisioningServices": "provs",
      "devicesProvisioningServicesCertificates": "pcert",
      "documentDBDatabaseAccounts": "cosmos",
      "eventGridDomains": "evgd",
      "eventGridDomainsTopics": "evgt",
      "eventGridEventSubscriptions": "evgs",
      "eventHubNamespaces": "evhns",
      "eventHubNamespacesEventHubs": "evh",
      "hdInsightClustersHadoop": "hadoop",
      "hdInsightClustersHbase": "hbase",
      "hdInsightClustersKafka": "kafka",
      "hdInsightClustersMl": "mls",
      "hdInsightClustersSpark": "spark",
      "hdInsightClustersStorm": "storm",
      "hybridComputeMachines": "arcs",
      "insightsActionGroups": "ag",
      "insightsComponents": "appi",
      "keyVaultVaults": "kv",
      "kubernetesConnectedClusters": "arck",
      "kustoClusters": "dec",
      "kustoClustersDatabases": "dedb",
      "logicIntegrationAccounts": "ia",
      "logicWorkflows": "logic",
      "machineLearningServicesWorkspaces": "mlw",
      "managedIdentityUserAssignedIdentities": "id",
      "managementManagementGroups": "mg",
      "migrateAssessmentProjects": "migr",
      "networkApplicationGateways": "agw",
      "networkApplicationSecurityGroups": "asg",
      "networkAzureFirewalls": "afw",
      "networkBastionHosts": "bas",
      "networkConnections": "con",
      "networkDnsZones": "dnsz",
      "networkExpressRouteCircuits": "erc",
      "networkFirewallPolicies": "afwp",
      "networkFirewallPoliciesWebApplication": "waf",
      "networkFirewallPoliciesRuleGroups": "wafrg",
      "networkFrontDoors": "fd",
      "networkFrontdoorWebApplicationFirewallPolicies": "fdfp",
      "networkLoadBalancersExternal": "lbe",
      "networkLoadBalancersInternal": "lbi",
      "networkLoadBalancersInboundNatRules": "rule",
      "networkLocalNetworkGateways": "lgw",
      "networkNatGateways": "ng",
      "networkNetworkInterfaces": "nic",
      "networkNetworkSecurityGroups": "nsg",
      "networkNetworkSecurityGroupsSecurityRules": "nsgsr",
      "networkNetworkWatchers": "nw",
      "networkPrivateDnsZones": "pdnsz",
      "networkPrivateLinkServices": "pl",
      "networkPublicIPAddresses": "pip",
      "networkPublicIPPrefixes": "ippre",
      "networkRouteFilters": "rf",
      "networkRouteTables": "rt",
      "networkRouteTablesRoutes": "udr",
      "networkTrafficManagerProfiles": "traf",
      "networkVirtualNetworkGateways": "vgw",
      "networkVirtualNetworks": "vnet",
      "networkVirtualNetworksSubnets": "snet",
      "networkVirtualNetworksVirtualNetworkPeerings": "peer",
      "networkVirtualWans": "vwan",
      "networkVpnGateways": "vpng",
      "networkVpnGatewaysVpnConnections": "vcn",
      "networkVpnGatewaysVpnSites": "vst",
      "notificationHubsNamespaces": "ntfns",
      "notificationHubsNamespacesNotificationHubs": "ntf",
      "operationalInsightsWorkspaces": "log",
      "portalDashboards": "dash",
      "powerBIDedicatedCapacities": "pbi",
      "purviewAccounts": "pview",
      "recoveryServicesVaults": "rsv",
      "resourcesResourceGroups": "rg",
      "searchSearchServices": "srch",
      "serviceBusNamespaces": "sb",
      "serviceBusNamespacesQueues": "sbq",
      "serviceBusNamespacesTopics": "sbt",
      "serviceEndPointPolicies": "se",
      "serviceFabricClusters": "sf",
      "signalRServiceSignalR": "sigr",
      "sqlManagedInstances": "sqlmi",
      "sqlServers": "sql",
      "sqlServersDataWarehouse": "sqldw",
      "sqlServersDatabases": "sqldb",
      "sqlServersDatabasesStretch": "sqlstrdb",
      "storageStorageAccounts": "st",
      "storageStorageAccountsVm": "stvm",
      "storSimpleManagers": "ssimp",
      "streamAnalyticsCluster": "asa",
      "synapseWorkspaces": "syn",
      "synapseWorkspacesAnalyticsWorkspaces": "synw",
      "synapseWorkspacesSqlPoolsDedicated": "syndp",
      "synapseWorkspacesSqlPoolsSpark": "synsp",
      "timeSeriesInsightsEnvironments": "tsi",
      "webServerFarms": "plan",
      "webSitesAppService": "app",
      "webSitesAppServiceEnvironment": "ase",
      "webSitesFunctions": "func",
      "webStaticSites": "stapp"
    },
    "abbrs": "[variables('$fxv#0')]",
    "mainModuleName": "main",
    "sharedRgName": "[toLower(format('{0}-{1}-shared-{2}', variables('abbrs').resourcesResourceGroups, parameters('projectName'), parameters('environmentName')))]",
    "mainRgName": "[toLower(format('{0}-{1}-{2}-{3}', variables('abbrs').resourcesResourceGroups, parameters('projectName'), variables('mainModuleName'), parameters('environmentName')))]",
    "randomSuffixCore": "[toLower(uniqueString(subscription().subscriptionId, parameters('projectName'), parameters('environmentName'), parameters('location')))]",
    "mainStorageAccountNameRoot": "[toLower(format('{0}{1}{2}{3}', variables('abbrs').storageStorageAccounts, parameters('projectName'), variables('mainModuleName'), parameters('environmentName')))]",
    "storageSuffixlength": "[sub(24, length(variables('mainStorageAccountNameRoot')))]",
    "mainStorageAccountName": "[format('{0}{1}', variables('mainStorageAccountNameRoot'), substring(variables('randomSuffixCore'), 0, variables('storageSuffixlength')))]",
    "mainFunctionWebjobsHostsContainerName": "azure-webjobs-hosts",
    "mainFunctionWebjobsSecretsContainerName": "azure-webjobs-secrets",
    "mainFunctionAudioFilesContainerName": "audio-files",
    "mainFunctionTranscriptionsContainerName": "transcriptions",
    "mainFunctionSummariesContainerName": "summaries",
    "mainFunctionFileShareName": "[toLower(format('{0}-{1}-functionshare-{2}', parameters('projectName'), variables('mainModuleName'), parameters('environmentName')))]",
    "mainAppServicePlanName": "[toLower(format('{0}-{1}-{2}-{3}', variables('abbrs').webServerFarms, parameters('projectName'), variables('mainModuleName'), parameters('environmentName')))]",
    "mainFunctionAppName": "[toLower(format('{0}-{1}-{2}-{3}', variables('abbrs').webSitesFunctions, parameters('projectName'), variables('mainModuleName'), parameters('environmentName')))]",
    "containers": [
      {
        "name": "[variables('mainFunctionWebjobsHostsContainerName')]"
      },
      {
        "name": "[variables('mainFunctionWebjobsSecretsContainerName')]"
      },
      {
        "name": "[variables('mainFunctionAudioFilesContainerName')]"
      },
      {
        "name": "[variables('mainFunctionTranscriptionsContainerName')]"
      },
      {
        "name": "[variables('mainFunctionSummariesContainerName')]"
      }
    ],
    "fileShares": [
      {
        "name": "[variables('mainFunctionFileShareName')]"
      }
    ],
    "tags": {
      "project": "[parameters('projectName')]",
      "environment": "[parameters('environmentName')]",
      "owner": "Steve Brouillard"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2022-09-01",
      "name": "[variables('sharedRgName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]"
    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2022-09-01",
      "name": "[variables('mainRgName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "mainResources-deployment",
      "resourceGroup": "[variables('mainRgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appServicePlanName": {
            "value": "[variables('mainAppServicePlanName')]"
          },
          "functionAppName": {
            "value": "[variables('mainFunctionAppName')]"
          },
          "functionWebsiteContentShareName": {
            "value": "[variables('mainFunctionFileShareName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountName": {
            "value": "[variables('mainStorageAccountName')]"
          },
          "storageBlobContainers": {
            "value": "[variables('containers')]"
          },
          "storageFileShares": {
            "value": "[variables('fileShares')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "6238893485170656060"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object"
            },
            "storageAccountName": {
              "type": "string"
            },
            "storageBlobContainers": {
              "type": "array"
            },
            "storageFileShares": {
              "type": "array"
            },
            "storageDeleteRetentionPolicy": {
              "type": "object",
              "defaultValue": {
                "enabled": true,
                "days": 5
              }
            },
            "appServicePlanName": {
              "type": "string"
            },
            "functionAppName": {
              "type": "string"
            },
            "functionWebsiteContentShareName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-deployment', parameters('storageAccountName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "name": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "deleteRetentionPolicy": {
                    "value": "[parameters('storageDeleteRetentionPolicy')]"
                  },
                  "containers": {
                    "value": "[parameters('storageBlobContainers')]"
                  },
                  "shares": {
                    "value": "[parameters('storageFileShares')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.17.1.54307",
                      "templateHash": "17083086557420809828"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "accessTier": {
                      "type": "string",
                      "defaultValue": "Hot",
                      "allowedValues": [
                        "Hot",
                        "Cool",
                        "Premium"
                      ]
                    },
                    "allowBlobPublicAccess": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "allowSharedKeyAccess": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "defaultToOAuthAuthentication": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "deleteRetentionPolicy": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "StorageV2"
                    },
                    "minimumTlsVersion": {
                      "type": "string",
                      "defaultValue": "TLS1_2"
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "defaultValue": "Enabled",
                      "allowedValues": [
                        "Enabled",
                        "Disabled"
                      ]
                    },
                    "sku": {
                      "type": "object",
                      "defaultValue": {
                        "name": "Standard_LRS",
                        "tier": "Standard"
                      }
                    },
                    "includeBlobServices": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "includeFileServices": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "includeQueueServices": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "includeTableServices": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "containers": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "shares": {
                      "type": "array",
                      "defaultValue": []
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "container",
                        "count": "[length(parameters('containers'))]"
                      },
                      "condition": "[and(parameters('includeBlobServices'), not(empty(parameters('containers'))))]",
                      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}/{1}/{2}', parameters('name'), 'default', parameters('containers')[copyIndex()].name)]",
                      "properties": {
                        "immutableStorageWithVersioning": {
                          "enabled": false
                        },
                        "defaultEncryptionScope": "$account-encryption-key",
                        "denyEncryptionScopeOverride": false,
                        "publicAccess": "None"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('name'), 'default')]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "share",
                        "count": "[length(parameters('shares'))]"
                      },
                      "condition": "[and(parameters('includeFileServices'), not(empty(parameters('shares'))))]",
                      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}/{1}/{2}', parameters('name'), 'default', parameters('shares')[copyIndex()].name)]",
                      "properties": {
                        "accessTier": "TransactionOptimized",
                        "shareQuota": 5120,
                        "enabledProtocols": "SMB"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('name'), 'default')]"
                      ]
                    },
                    {
                      "condition": "[parameters('includeBlobServices')]",
                      "type": "Microsoft.Storage/storageAccounts/blobServices",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'default')]",
                      "properties": {
                        "deleteRetentionPolicy": "[parameters('deleteRetentionPolicy')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                      ]
                    },
                    {
                      "condition": "[parameters('includeFileServices')]",
                      "type": "Microsoft.Storage/storageAccounts/fileServices",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'default')]",
                      "properties": {
                        "shareDeleteRetentionPolicy": "[parameters('deleteRetentionPolicy')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                      ]
                    },
                    {
                      "condition": "[parameters('includeQueueServices')]",
                      "type": "Microsoft.Storage/storageAccounts/queueServices",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'default')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                      ]
                    },
                    {
                      "condition": "[parameters('includeTableServices')]",
                      "type": "Microsoft.Storage/storageAccounts/tableServices",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'default')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "kind": "[parameters('kind')]",
                      "sku": "[parameters('sku')]",
                      "properties": {
                        "accessTier": "[parameters('accessTier')]",
                        "allowBlobPublicAccess": "[parameters('allowBlobPublicAccess')]",
                        "allowSharedKeyAccess": "[parameters('allowSharedKeyAccess')]",
                        "defaultToOAuthAuthentication": "[parameters('defaultToOAuthAuthentication')]",
                        "encryption": {
                          "services": {
                            "file": {
                              "keyType": "Account",
                              "enabled": true
                            },
                            "blob": {
                              "keyType": "Account",
                              "enabled": true
                            }
                          },
                          "keySource": "Microsoft.Storage"
                        },
                        "minimumTlsVersion": "[parameters('minimumTlsVersion')]",
                        "networkAcls": {
                          "bypass": "AzureServices",
                          "defaultAction": "Allow"
                        },
                        "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                        "supportsHttpsTrafficOnly": true
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "primaryEndpoints": {
                      "type": "object",
                      "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2022-09-01').primaryEndpoints]"
                    },
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                    },
                    "apiVersion": {
                      "type": "string",
                      "value": "2022-09-01"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-deployment', parameters('appServicePlanName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "name": {
                    "value": "[parameters('appServicePlanName')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.17.1.54307",
                      "templateHash": "10827715479385325957"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "sku": {
                      "type": "object",
                      "defaultValue": {
                        "name": "Y1",
                        "tier": "Dynamic"
                      }
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "functionapp"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Web/serverfarms",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "sku": "[parameters('sku')]",
                      "kind": "[parameters('kind')]",
                      "properties": {}
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Web/serverfarms', parameters('name'))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-deployment', parameters('functionAppName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "name": {
                    "value": "[parameters('functionAppName')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "appServicePlanId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('appServicePlanName'))), '2022-09-01').outputs.id.value]"
                  },
                  "storageAccountName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('storageAccountName'))), '2022-09-01').outputs.name.value]"
                  },
                  "functionWebsiteContentShareName": {
                    "value": "[parameters('functionWebsiteContentShareName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.17.1.54307",
                      "templateHash": "6679052643186164189"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "appServicePlanId": {
                      "type": "string"
                    },
                    "storageAccountName": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "functionapp"
                    },
                    "functionWebsiteContentShareName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Web/sites",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('name')]",
                      "kind": "[parameters('kind')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "properties": {
                        "enabled": true,
                        "httpsOnly": true,
                        "publicNetworkAccess": "Enabled",
                        "serverFarmId": "[parameters('appServicePlanId')]"
                      }
                    },
                    {
                      "type": "Microsoft.Web/sites/config",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'appsettings')]",
                      "properties": {
                        "AzureWebJobsStorage": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-09-01').keys[0].value)]",
                        "FUNCTIONS_EXTENSION_VERSION": "~4",
                        "FUNCTIONS_WORKER_RUNTIME": "dotnet",
                        "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-09-01').keys[0].value)]",
                        "WEBSITE_CONTENTSHARE": "[parameters('functionWebsiteContentShareName')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "identityPrincipalId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Web/sites', parameters('name')), '2022-09-01', 'full').identity.principalId]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "uri": {
                      "type": "string",
                      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', parameters('name')), '2022-09-01').defaultHostName)]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('appServicePlanName')))]",
                "[resourceId('Microsoft.Resources/deployments', format('{0}-deployment', parameters('storageAccountName')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('mainRgName'))]"
      ]
    }
  ]
}